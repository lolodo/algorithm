apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.nextev.screensharing"
        minSdkVersion 22
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a', 'arm64-v8a'
            moduleName "screensharing"
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDir 'src/main/libs'
        }

        task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
            def ndkDir = android.ndkDirectory
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                    '-j', Runtime.runtime.availableProcessors(),
                    'all',
                    'NDK_DEBUG=1'
        }

        task cleanNative(type: Exec, description: 'Clean JNI object files') {
            def ndkDir = android.ndkDirectory
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                    'clean'
        }

        clean.dependsOn 'cleanNative'

        tasks.withType(JavaCompile) {
            compileTask -> compileTask.dependsOn buildNative
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}
